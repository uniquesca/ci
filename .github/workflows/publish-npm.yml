name: Publish NPM package

on:
  workflow_call:
    secrets:
      NODE_AUTH_TOKEN:
        description: 'Access token for authentication with the NPM registry'
        required: true
      UNIQUES_GITHUB_ACCESS_TOKEN:
        description: 'Access token for cloning Uniques private repositories from GitHub'
        required: true
    inputs:
      node_version:
        description: 'Node version to use for building and publishing the package'
        required: false
        type: number
        default: 16
      release_version:
        description: 'Version being published, has to be in x.y.z format'
        required: true
        type: string
      build_cmd:
        description: 'Command to use to build the package'
        required: false
        type: string
        default: ''
      github_release:
        description: 'Whether github release should be published too'
        required: false
        default: true
        type: boolean
      dist_folder:
        description: 'Dist folder to use for publishing'
        required: false
        default: 'dist'
        type: string
      cleanup_dependencies:
        description: 'Whether dependencies should be removed from package.json prior to publishing'
        required: false
        type: boolean
        default: false

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Checkout application repository
        uses: actions/checkout@v3

      - name: Get NPM cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache NPM dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-ci-publish-npm-${{ hashFiles('package.json,package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-ci-publish-npm-

      - name: Prepare .npmrc file
        run: |
          if [ ! -f ".npmrc" ]; then
            echo "@uniquesca:registry=https://npm.pkg.github.com" >> .npmrc
            echo "//npm.pkg.github.com/:_authToken=${{ secrets.UNIQUES_GITHUB_ACCESS_TOKEN }}" >> .npmrc
            echo "always_auth=true" >> .npmrc
          fi

      - name: Update package version
        run: |
          if [ -f "package.json" ]; then
            npm pkg set version=${{ inputs.release_version }}
          fi

      - name: Install NPM dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: npm install

      - name: Run build command if specified
        run: ${{ inputs.build_cmd }}

      - name: Remove dependencies from package.json
        if: ${{ inputs.cleanup_dependencies == 'true' }}
        run: |
          npm pkg delete dependencies
          npm pkg delete devDependencies
          npm pkg delete scripts

      - name: Publish NPM package on GitHub
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          npm publish

      - run: ls -al ${{ inputs.dist_folder }}

      - name: Publish Github release
        uses: uniquesca/ci/publish-github-release@main
        if: ${{ inputs.github_release == true }}
        with:
          release_version: ${{ inputs.release_version }}
          attach_dist: true
          dist_folder: ${{ inputs.dist_folder }}
          repo_token: ${{ secrets.UNIQUES_GITHUB_ACCESS_TOKEN }}
