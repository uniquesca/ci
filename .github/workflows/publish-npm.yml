name: Publish NPM package

on:
  workflow_call:
    secrets:
      NODE_AUTH_TOKEN:
        description: 'Access token for authentication with the NPM registry'
        required: true
      UNIQUES_GITHUB_ACCESS_TOKEN:
        description: 'Access token for cloning Uniques private repositories from GitHub'
        required: true
    inputs:
      node_version:
        description: 'Node version to use for building and publishing the package'
        required: false
        type: number
        default: 20
      release_version:
        description: 'Version being published, has to be in x.y.z format'
        required: true
        type: string
      build_cmd:
        description: 'Command to use to build the package'
        required: false
        type: string
        default: ''
      github_release:
        description: 'Whether github release should be published too'
        required: false
        default: true
        type: boolean
      dist_folder:
        description: 'Dist folder to use for publishing'
        required: false
        default: 'dist'
        type: string
      cleanup_dependencies:
        description: 'Whether dependencies should be removed from package.json prior to publishing'
        required: false
        type: boolean
        default: false
      working_directory:
        description: 'Directory where npm commands should be executed'
        required: false
        type: string
        default: '.'
      copy_to_dist:
        description: "Array of files or directories to copy to dist folder"
        required: false
        type: string
        default: "[]"
      dist_sub_directory:
        description: 'If the build of the target uses a sub directory in dist, specify it here'
        required: false
        default: ''
        type: string

jobs:
  publish-npm:
    name: Publish NPM package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Checkout application repository
        uses: actions/checkout@v4

      - name: Install NPM dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          echo "Preparing .npmrc file"
          cd ${{ inputs.working_directory }}
          echo "@uniquesca:registry=https://npm.pkg.github.com/" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> .npmrc
          echo "Install Dependencies"
          npm install --no-audit --no-fund --prefer-offline --no-progress --loglevel=error          

      - name: Run build command if specified
        if: ${{ inputs.build_cmd != '' }}
        run: |
          echo "Build input given, execute build now"
          cd ${{ inputs.working_directory }}
          ${{ inputs.build_cmd }}

      # usage: copy_to_dist: '["package.json"]'
      - name: Copy specified files and directories to dist
        if: ${{ inputs.copy_to_dist != '[]' }}
        run: |
          echo "Copy extra dist files and folders:"
          for item in $(echo '${{ inputs.copy_to_dist }}' | jq -r '.[]'); do
            echo "Copying $item to ${{ inputs.working_directory }}/${{ inputs.dist_folder }}/${{ inputs.dist_sub_directory }}"
            cp -r "$item" ${{ inputs.working_directory }}/${{ inputs.dist_folder }}/${{ inputs.dist_sub_directory }}
          done
        shell: bash

      - name: Update package version
        run: |
          DIRECTORY="${{ inputs.working_directory }}"
          if [ -n "${{ inputs.build_cmd }}" ]; then
            DIRECTORY="$DIRECTORY/${{ inputs.dist_folder }}/${{ inputs.dist_sub_directory }}"
          fi
          cd "$DIRECTORY"
          if [ -f "package.json" ]; then
            npm pkg set version=${{ inputs.release_version }}
          else
            echo "No package.json found"
          fi

      - name: Remove dependencies from package.json
        if: ${{ inputs.cleanup_dependencies == true }}
        run: |
          DIRECTORY="${{ inputs.working_directory }}"
          if [ -n "${{ inputs.build_cmd }}" ]; then
           DIRECTORY="$DIRECTORY/${{ inputs.dist_folder }}/${{ inputs.dist_sub_directory }}"
          fi
          cd "$DIRECTORY"
          npm pkg delete dependencies
          npm pkg delete devDependencies
          npm pkg delete scripts

      - name: Publish NPM package on GitHub
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          DIRECTORY="${{ inputs.working_directory }}"
          if [ -n "${{ inputs.build_cmd }}" ]; then
           DIRECTORY="$DIRECTORY/${{ inputs.dist_folder }}/${{ inputs.dist_sub_directory }}"
            echo "@uniquesca:registry=https://npm.pkg.github.com/" > .npmrc
            echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> "$DIRECTORY/.npmrc"
          fi
          cd "$DIRECTORY"
          npm publish

      # This step is needed to prevent cleanup
      - name: Move dist repo outside of the working tree
        if: ${{ inputs.github_release == true }}
        run: cp ${{ inputs.working_directory }}/${{ inputs.dist_folder }} ../dist -Rf

      - name: Publish Github release
        uses: uniquesca/ci/publish-github-release@main
        if: ${{ inputs.github_release == true }}
        with:
          release_version: ${{ inputs.release_version }}
          attach_dist: true
          dist_folder: ../dist
          repo_token: ${{ secrets.UNIQUES_GITHUB_ACCESS_TOKEN }}