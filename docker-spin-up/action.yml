name: Spin-up application in Docker

inputs:
  working_directory:
    description: 'Directory to spin up Docker in'
    required: false
    type: string
    default: '.'
  docker_env_variables:
    description: 'Environment variables used for Docker config'
    required: true
    type: string
  hostname:
    description: 'Hostname to use to access application'
    required: true
    type: string
  docker_registry:
    description: 'Docker registry to log in'
    required: false
    type: string
  docker_username:
    description: 'Docker registry username'
    required: false
    type: string
  docker_password:
    description: 'Docker password/access token'
    required: false
    type: string
  profile:
    description: 'Docker compose profile to use'
    require: false
    type: string
  docker_up_arguments:
    description: "Arguments for Docker compose up command, excluding -d and --profile"
    require: false
    type: string
    default: '--force-recreate'
  docker_up_command:
    description: 'Alternative command to run docker'
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Prepare command to spin up Docker
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      id: docker_up_command
      run: |
        cmd="${{ inputs.docker_up_command }}"
        if [ -z "$cmd" ]; then
          if [ -f "task.sh" ]; then
            echo "Using task.sh to spin up Docker"
            cmd="./task.sh up -d"
          else
            echo "Using docker compose up to spin up Docker"
            cmd="docker compose up -d"
          fi
        fi
        
        arguments="${{ inputs.docker_up_arguments }}"
        if [ -n "$arguments" ]; then
          cmd="$cmd $arguments"
        fi
        
        profile="${{ inputs.profile }}"
        if [ -n "$profile" ]; then
          cmd="$cmd --profile $profile"
        fi
        
        echo "cmd=$cmd" >> $GITHUB_OUTPUT

    - name: Prepare uid:gid mapping
      id: uid_gid
      run: echo "result=$(id -u):$(id -g)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Prepare environment variables for Docker
      id: merge_docker_variables
      uses: uniquesca/ci/merge-environment-variables@main
      with:
        variables1: ${{ format('{{"docker.user_map":"{0}"}}', steps.uid_gid.outputs.result) }}
        variables2: ${{ inputs.docker_env_variables }}

    - name: Prepare Docker config
      uses: uniquesca/ci/prepare-environment@main
      with:
        env_variables: ${{ steps.merge_docker_variables.outputs.variables }}
        env_file_stub: .env.dist
        env_file: .env

    - name: Update hosts file
      run: sudo echo "127.0.0.1 ${{ inputs.hostname }}" | sudo tee -a /etc/hosts
      shell: bash

    - name: Login to Docker Hub
      if: ${{ inputs.docker_registry }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Spin up Docker
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "Running command: ${{ steps.docker_up_command.outputs.cmd }}"
        ${{ steps.docker_up_command.outputs.cmd }}
      shell: bash